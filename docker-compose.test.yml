
version: '2.2'

services:

  storer_client:
    build:
      context: client
      args:
        - CYBER_DOJO_HOME=${CYBER_DOJO_HOME}
        - PORT=${CYBER_DOJO_STORER_CLIENT_PORT}
    user: nobody
    image: cyberdojo/storer-client
    init: true
    container_name: test-storer-client
    read_only: true
    tmpfs: /tmp
    depends_on:
      - storer
    restart: 'no'
    volumes:
      - ./client/test:${CYBER_DOJO_HOME}/test:ro
    environment:
      - CYBER_DOJO_STORER_SERVICE_NAME
      - CYBER_DOJO_STORER_SERVICE_PORT
      - CYBER_DOJO_KATAS_ROOT
      - CYBER_DOJO_COVERAGE_ROOT
    ports:
      - ${CYBER_DOJO_STORER_CLIENT_PORT}:${CYBER_DOJO_STORER_CLIENT_PORT}

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  storer:
    container_name: test-storer-server
    environment:
      - CYBER_DOJO_COVERAGE_ROOT
    restart: 'no'
    volumes:
      - ./server/test:${CYBER_DOJO_HOME}/test:ro

  # - - - - - - - - - - - - - - - - - - - - - - -
  # monitoring

  prometheus:
    container_name: test-storer-prometheus

  grafana:
    container_name: test-storer-grafana
    ports:
      - '3001:3001'

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # starter is handy in tests for creating kata-manifests

  starter:
    user: nobody
    image: cyberdojo/starter
    init: true
    container_name: test-storer-starter-server
    read_only: true
    tmpfs: /tmp
    environment:
      - CYBER_DOJO_START_POINTS_ROOT
    volumes:
      - ./start_points:${CYBER_DOJO_START_POINTS_ROOT}:ro
